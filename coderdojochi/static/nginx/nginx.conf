worker_processes 1;

user nobody nogroup;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    # increase if you have lots of clients
    worker_connections 1024;

    # set to 'on' if nginx worker_processes > 1
    accept_mutex off;

    # to enable for Linux 2.6+
    use epoll;
}

http {
    include mime.types;

    # fallback in case we can't determine a type
    default_type application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log combined;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;

    gzip on;
    gzip_min_length 1000;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    upstream app_server {
        # fail_timeout=0 means we always retry an upstream even if it failed
        # to return a good HTTP response

        server app:8080 fail_timeout=0;
    }

    #server {
        # if no Host match, close the connection to prevent host spoofing
        #listen 80 default_server;
        #return 444;
    #}

    server {
        #listen 80 deferred;
        listen 80;
        client_max_body_size 4G;

        # set the correct host(s) for your site
        server_name coderdojochi.com www.coderdojochi.com coderdojochi.org www.coderdojochi.org;

        keepalive_timeout 65;

        charset utf-8;

        location /static/ {
            alias /build/static/;
        }

        location / {

            # an HTTP header important enough to have its own Wikipedia entry:
            #   http://en.wikipedia.org/wiki/X-Forwarded-For
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # pass the Host: header from the client right along so redirects
            # can be set properly within the Rack application
            proxy_set_header Host $http_host;

            # we don't want nginx trying to do something clever with
            # redirects, we set the Host: header above already.
            proxy_redirect off;

            proxy_read_timeout 330;
            proxy_buffers 8 24k;
            proxy_buffer_size 2k;
            proxy_set_header X-Real-IP $remote_addr;

            # Try to serve static files from nginx, no point in making an
            # *application* server like Unicorn/Rainbows! serve static files.
            if (!-f $request_filename) {
                proxy_pass http://app_server;
                break;
            }
        }

        # Error pages
        error_page 500 502 503 504 /500.html;
        location = /500.html {
            root /build/static/;
        }
    }
}
